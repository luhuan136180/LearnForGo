package 插入排序

import "fmt"

/*
插入排序是在一个已经有序的小序列的基础上，一次插入一个元素。

当然，刚开始这个有序的小序列只有1个元素，就是第一个元素。比较是从有序序列的末尾开 始，也就是想要插入的元素和已经有序的最大者开始比起，如果比它大则直接插入在其后面，否则一直往前找直到找到它该插入的位置。

如果碰见一个和插入元素相 等的，那么插入元素把想插入的元素放在相等元素的后面。
*/

//该排序是有序的
func insertSort(nums []int, len int) {
	//{9,1,5,6,2,3}
	for i := 1; i < len; i++ {
		//无序数组从下标1开始
		if nums[i] < nums[i-1] { //若第i个元素大于第i-1个元素，则直接插入，也就是相对位置不变
			//	进入表示，无序数组第一个值小于有序数组最大值
			j := i - 1                    //有序数组下标，当前表示有序数组最大值下标
			tmp := nums[i]                //存放需要排序的元素
			for j >= 0 && tmp < nums[j] { //查找在有序表中的插入位置
				nums[j+1] = nums[j]
				j-- //元素后移
			}
			nums[j+1] = tmp //插入到正确的位置

		}
		fmt.Println(nums)
	}
}